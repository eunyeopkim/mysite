<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="board">
	
	<insert id="insert" parameterType="boardvo">
		<choose>
			<when test="gNo == null">
				<![CDATA[
				insert
				  into board
				values ( null,
						 #{title },
						 #{contents },
						 0,
						 now(),
						 ( select ifnull( max( g_no ), 0 ) + 1
						     from board a ),
						 1, 
						 0, 
						 #{userNo } )
				]]>
			</when>
			<otherwise>
				<![CDATA[
				insert
				  into board
				values ( null,
						 #{title },
						 #{contents },
						 0,
						 now(),
						 #{gNo },
						 #{oNo }, 
						 #{depth }, 
						 #{userNo } )				
				]]>
			</otherwise>
		</choose>
		
		
	</insert>
	
	<select id="findByNo" resultType="boardvo" parameterType="long">
	<![CDATA[
		select no, title, contents, hit, g_no as gNo, o_no as oNo, reg_date as regDate,depth, user_no as userNo
		  from board
	     where no = #{no }
     ]]>
	</select>
		<select id="findByNoAndUserNo" resultType="boardvo" parameterType="map">
	<![CDATA[
		select no, title, contents, hit, g_no as gNo, o_no as oNo, reg_date as regDate,depth, user_no as userNo
		  from board
	     where no = #{boardNo }
	       and user_no = #{userNo}
     ]]>
	</select>
	<select id="findAllByPageAndKeword" parameterType="map" resultType="boardvo"> 
		<choose>
			<when test="keyword == null or keyword == ''">
			<![CDATA[
				select b.no,
						b.title, 
						b.contents,
						b.hit, 
						b.reg_date as regDate,
						b.depth, 
						b.user_no as userNo,
						u.name as userName
				  from board b, user u
				 where b.user_no=u.no
		 	 order by g_no desc, o_no asc
		 	    limit #{startIndex }, #{size }	
			]]>
			</when>
			<otherwise>
			<![CDATA[
				select b.no,
						b.title, 
						b.contents,
						b.hit, 
						b.reg_date as regDate,
						b.depth, 
						b.user_no as userNo,
						u.name as userName
				  from board b, user u
				 where b.user_no=u.no
				   and (title like '%${keyword }%' or contents like '%${keyword }%')
		 	 order by g_no desc, o_no asc
		 	    limit #{startIndex }, #{size }	
		 	 ]]>
			</otherwise>
		</choose>
	</select>
	<select id="view" resultType="boardvo" parameterType="long">
	<![CDATA[
		select no, title, contents, hit, reg_date, g_no, o_no, depth, user_no 
		from board 
		where no = #{no }
	]]>
	</select>
	<delete id="delete" parameterType="map">
	<![CDATA[
		delete from board where no = #{boardNo } and user_no = #{userNo}
	]]>
	</delete>
	<update id="update" parameterType="boardvo" >
	<![CDATA[
		update board 
		   set title = #{title } , contents=#{contents } 
		 where no = #{no }
		   and user_no = #{userNo}
	]]>
	</update>
	<update id="updateHit" parameterType="long" >
	<![CDATA[
		update board 
		   set hit = hit +1
	     where no = #{no }
	]]>
	</update>
	<update id="updateOrderNo" parameterType="map">
	<![CDATA[
		update board set o_no = o_no + 1 where g_no = #{gNo } and o_no >= #{oNo }
	]]>
	</update>
	
	<select id="getCount" parameterType="String" resultType="integer">
	<choose>
		<when test="_parameter == null or _parameter == '' ">
			<![CDATA[
				select count(*) as count from board
			]]>
		</when>
		<otherwise>
			select count(*) as count 
			from board 
			where (board.title like '%${_parameter  }%' 
			  or board.contents like '%${_parameter  }%')
		</otherwise>
	</choose>
	</select>
	
	
	
</mapper>
